generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE")
}

model Event {
  id        String  @id @default(uuid())
  eventName String  @unique
  eventType String?
  eventDate String?
  eventYear String?
}

model Volunteer {
  id              String           @id @default(uuid())
  firstName       String?
  lastName        String?
  email           String?          @unique
  street          String?
  city            String?
  state           String?
  zip             String?
  phone           String?
  updatedAt       DateTime         @default(now())
  skillId         String?
  lifeSkillId     String?
  lifeSkills      LifeSkills?      @relation(fields: [lifeSkillId], references: [id])
  politicalSkills PoliticalSkills? @relation(fields: [skillId], references: [id])
}

model PoliticalSkills {
  id                  String      @id @default(uuid())
  campaignMgmt        String?     @default("")
  canvassing          String?     @default("")
  communityOrganizing String?     @default("")
  electedOfficialCurr String?     @default("")
  electedOfficialPast String?     @default("")
  p2pTextingMgmt      String?     @default("")
  p2pTextingVol       String?     @default("")
  phonebanking        String?     @default("")
  pollWorker          String?     @default("")
  postcardMgmt        String?     @default("")
  postcardWriting     String?     @default("")
  txtPhoneScriptEdit  String?     @default("")
  txtPhoneScriptWrite String?     @default("")
  vanVoteBuildExp     String?     @default("")
  voterReg            String?     @default("")
  email               String?     @unique
  firstName           String?
  lastName            String?
  volunteerId         String?
  volunteer           Volunteer[]
}

model LifeSkills {
  id                       String      @id @default(uuid())
  firstName                String?
  lastName                 String?
  email                    String?     @unique
  actor                    String?     @default("")
  artist                   String?     @default("")
  boardOfDirectors         String?     @default("")
  dataScience              String?     @default("")
  dbMgmt                   String?     @default("")
  editor                   String?     @default("")
  professor                String?     @default("")
  trainer                  String?     @default("")
  fundraising              String?     @default("")
  graphicDesign            String?     @default("")
  hr                       String?     @default("")
  it                       String?     @default("")
  legal                    String?     @default("")
  linguist                 String?     @default("")
  msgComms                 String?     @default("")
  musician                 String?     @default("")
  newsletterCreateDesign   String?     @default("")
  newsletterWrite          String?     @default("")
  nonprofMgmt              String?     @default("")
  pr                       String?     @default("")
  publicSpeak              String?     @default("")
  recruitment              String?     @default("")
  research                 String?     @default("")
  otherLanguage            String?     @default("")
  socialMediaContentCreate String?     @default("")
  socialMediaMgmt          String?     @default("")
  speechWriter             String?     @default("")
  strategicPlanning        String?     @default("")
  videoEditCreate          String?     @default("")
  volMgmt                  String?     @default("")
  webDesign                String?     @default("")
  webMgmt                  String?     @default("")
  anythingElse             String?     @default("")
  updatedAt                DateTime    @default(now())
  volunteerId              String?
  volunteer                Volunteer[]
}

model Sandbox {
  id        String   @id @default(uuid())
  firstName String?
  lastName  String?
  email     String?  @unique
  state     String?
  phone     String?
  interests String?
  createdAt DateTime @default(now())
}
